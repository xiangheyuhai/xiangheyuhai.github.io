[{"title":"欢迎来到樊的博客","date":"2021-02-18T14:55:46.000Z","path":"2021/02/18/欢迎来到樊的博客/","content":"<h1 id=\"像河与海\"><a href=\"#像河与海\" class=\"headerlink\" title=\"像河与海\"></a>像河与海</h1><h2 id=\"欢迎来到樊的博客\"><a href=\"#欢迎来到樊的博客\" class=\"headerlink\" title=\"欢迎来到樊的博客\"></a>欢迎来到樊的博客</h2><h2 id=\"十年饮冰，难凉热血\"><a href=\"#十年饮冰，难凉热血\" class=\"headerlink\" title=\"十年饮冰，难凉热血\"></a>十年饮冰，难凉热血</h2><a id=\"more\"></a>","tags":[{"name":"大家好，我是像河与海！","slug":"大家好，我是像河与海！","permalink":"https://xiangheyuhai.github.io/tags/%E5%A4%A7%E5%AE%B6%E5%A5%BD%EF%BC%8C%E6%88%91%E6%98%AF%E5%83%8F%E6%B2%B3%E4%B8%8E%E6%B5%B7%EF%BC%81/"}]},{"title":"Share_Xmind安装在指定文件夹","date":"2021-02-15T14:55:46.000Z","path":"2021/02/15/Share_Xmind安装在指定文件夹/","content":"<h1 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h1><p>XMind安装时默认安装在C盘，为了给C盘释放压力，将XMind安装在指定文件夹</p>\n<h1 id=\"操作步骤\"><a href=\"#操作步骤\" class=\"headerlink\" title=\"操作步骤\"></a>操作步骤</h1><ol>\n<li><p> win+r，输入“regedit”打开注册表编辑器</p>\n</li>\n<li><p>找到如图所给的路径</p>\n<p><code>\\HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion</code></p>\n<a id=\"more\"></a>\n\n</li>\n</ol>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203114101898.png\"></p>\n<ol start=\"3\">\n<li><p>双击修改“ProgramFilesDir”这个配置项。这里我修改的路径为<code>D\\SoftWare</code>。你可以自定义一个路径</p>\n<p>==重要：修改前先把原数值记录下来，方便之后修改回去==</p>\n</li>\n</ol>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203110457796.png\" alt=\"image-20210203110457796\"></p>\n<p>​                修改完成</p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203110541514.png\" alt=\"image-20210203110541514\"></p>\n<ol start=\"4\">\n<li>安装XMind，安装完成之后右键桌面快捷方式找到文件安装路径，如图即安装成功。</li>\n</ol>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203110628672.png\" alt=\"image-20210203110628672\"></p>\n<ol start=\"5\">\n<li>==重要：将“ProgramFilesDir”这个配置项。修改为原始的数据值==</li>\n</ol>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203110755858.png\" alt=\"image-20210203110755858\"></p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203110835184.png\" alt=\"image-20210203110835184\"></p>\n<p>安装完成</p>\n<h1 id=\"本文仅是做一个记录并分享出来。如有错误请指正，如有更好的方法望分享\"><a href=\"#本文仅是做一个记录并分享出来。如有错误请指正，如有更好的方法望分享\" class=\"headerlink\" title=\"本文仅是做一个记录并分享出来。如有错误请指正，如有更好的方法望分享\"></a>本文仅是做一个记录并分享出来。如有错误请指正，如有更好的方法望分享</h1>","tags":[{"name":"Xmind","slug":"Xmind","permalink":"https://xiangheyuhai.github.io/tags/Xmind/"}]},{"title":"学习笔记_Java","date":"2021-02-15T14:55:46.000Z","path":"2021/02/15/学习笔记_Java/","content":"<h1 id=\"windows快捷键\"><a href=\"#windows快捷键\" class=\"headerlink\" title=\"windows快捷键\"></a>windows快捷键</h1><p>Alt + F4    关闭</p>\n<p>Shift + DEL    永久删除</p>\n<p>WIN + E    打开我的电脑</p>\n<p>Ctrl + Shift  + ESC    打开任务管理器</p>\n<h1 id=\"dos命令\"><a href=\"#dos命令\" class=\"headerlink\" title=\"dos命令\"></a>dos命令</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\t\t\t盘符切换</span><br><span class=\"line\">dir\t\t\t查看当前目录下的所有文件</span><br><span class=\"line\">cd\t\t\t切换目录（change directory）    </span><br><span class=\"line\">cd ..\t\t返回上一级</span><br><span class=\"line\">cd /d C:\t\t进入C盘</span><br><span class=\"line\">cd /d D:\\C++\t进入D盘中C++文件夹</span><br><span class=\"line\">cls\t\t\t清屏（clean screen）</span><br><span class=\"line\">ipconfig\t查看IP地址</span><br><span class=\"line\">    <span class=\"comment\">/*打开应用*/</span></span><br><span class=\"line\">calc\t\t打开计算器</span><br><span class=\"line\">mspaint\t\t打开画图工具</span><br><span class=\"line\">notepad\t\t新建记事本 </span><br><span class=\"line\">    <span class=\"comment\">/*文件夹*/</span></span><br><span class=\"line\">mk 目录名\t\t新建文件夹</span><br><span class=\"line\">rd 目录名    \t删除文件夹</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"Java三大版本\"><a href=\"#Java三大版本\" class=\"headerlink\" title=\"Java三大版本\"></a>Java三大版本</h1><ul>\n<li>Write Once，Run Anywhere</li>\n<li>JavaSE    标准版（桌面程序，控制台开发）</li>\n<li>JavaME  淘汰</li>\n<li>JavaEE    企业级开发（web端 服务器开发）</li>\n</ul>\n<a id=\"more\"></a>\n\n<h1 id=\"JDK-JRE-JVM\"><a href=\"#JDK-JRE-JVM\" class=\"headerlink\" title=\"JDK  JRE  JVM\"></a>JDK  JRE  JVM</h1><p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210312210012917.png\" alt=\"image-20210312210012917\"></p>\n<p>JDK  开发者工具</p>\n<p>JRE  运行环境</p>\n<p>JVM  虚拟环境</p>\n<h1 id=\"卸载方法\"><a href=\"#卸载方法\" class=\"headerlink\" title=\"卸载方法\"></a>卸载方法</h1><p>p17</p>\n","tags":[{"name":"Java","slug":"Java","permalink":"https://xiangheyuhai.github.io/tags/Java/"}]},{"title":"学习笔记_Linux","date":"2021-02-15T14:55:46.000Z","path":"2021/02/15/学习笔记_Linux/","content":"<h1 id=\"Xshell-Xfpt\"><a href=\"#Xshell-Xfpt\" class=\"headerlink\" title=\"Xshell Xfpt\"></a>Xshell Xfpt</h1><p>连接系统</p>\n<p>上传文件</p>\n<h1 id=\"走进Linux\"><a href=\"#走进Linux\" class=\"headerlink\" title=\"走进Linux\"></a>走进Linux</h1><blockquote>\n<p>开机登录</p>\n</blockquote>\n<p>开机有许多程序，Windows中叫“服务（service）”,Linux中叫“守护进程（dramon）”</p>\n<a id=\"more\"></a>\n\n<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"comment\">/*基操*/</span></span><br><span class=\"line\">cd</span><br><span class=\"line\">cd  \t改变目录</span><br><span class=\"line\">cd ..\t回退到上一个目录；   “..”代表上一级目录</span><br><span class=\"line\">pwd\t\t显示当前所在的目录路径</span><br><span class=\"line\">ls\t\t列出当前目录中的所有文件</span><br><span class=\"line\">reset\t\t重新初始化终端/清屏</span><br><span class=\"line\">clear\t\t清屏</span><br><span class=\"line\">history\t\t查看命令历史</span><br><span class=\"line\">help\t\t帮助</span><br><span class=\"line\"><span class=\"built_in\">exit</span> \t\t退出  </span><br><span class=\"line\">    <span class=\"comment\">/*关机*/</span></span><br><span class=\"line\">shutdown\t关机</span><br><span class=\"line\">sync\t\t将数据由内存同步到硬盘中</span><br><span class=\"line\">shutdown -h <span class=\"number\">10</span>\t\t<span class=\"number\">10</span>分钟或关机</span><br><span class=\"line\">shutdown -h now\t\t立刻关机</span><br><span class=\"line\">shutdown       </span><br><span class=\"line\">shutdown\t关机    </span><br><span class=\"line\">shutdown\t关机    </span><br><span class=\"line\">shutdown\t关机    </span><br><span class=\"line\">    <span class=\"comment\">/*文件夹 文件操作*/</span></span><br><span class=\"line\">touch \t新建一个文件</span><br><span class=\"line\">rm\t\t删除一个文件</span><br><span class=\"line\">mkdir\t新建一个文件夹</span><br><span class=\"line\">rm -r\t删除一个文件夹        </span><br><span class=\"line\">    `rm -rf` 切勿在linux中尝试</span><br><span class=\"line\">mv\t\t移动文件    </span><br><span class=\"line\">    比如：mv fjx.c fjx   指的是把fjx.v移动到fjx文件夹中</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","tags":[{"name":"Linux","slug":"Linux","permalink":"https://xiangheyuhai.github.io/tags/Linux/"}]},{"title":"学习笔记_HAL库基操","date":"2021-02-08T14:55:46.000Z","path":"2021/02/08/学习笔记_HAL库基操/","content":"<h1 id=\"1-USART\"><a href=\"#1-USART\" class=\"headerlink\" title=\"1. USART\"></a>1. USART</h1><p>##1.1 printf重定义</p>\n<h4 id=\"第一种\"><a href=\"#第一种\" class=\"headerlink\" title=\"第一种\"></a>第一种</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;//在头引入</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**************************************printf重定义**************************************/</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> __io_putchar(<span class=\"keyword\">int</span> ch)<span class=\"comment\">//在 USER CODE BEGIN 0 添加</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tHAL_UART_Transmit(&amp;huart1 , (<span class=\"keyword\">uint8_t</span> *)&amp;ch, <span class=\"number\">1</span>, <span class=\"number\">0xFFFF</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"第二种\"><a href=\"#第二种\" class=\"headerlink\" title=\"第二种\"></a>第二种</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Private function prototypes -----------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> __GNUC__</span></span><br><span class=\"line\"><span class=\"comment\">/* With GCC, small printf (option LD Linker-&gt;Libraries-&gt;Small printf</span></span><br><span class=\"line\"><span class=\"comment\">   set to &#x27;Yes&#x27;) calls __io_putchar() */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PUTCHAR_PROTOTYPE int __io_putchar(int ch)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> PUTCHAR_PROTOTYPE int fputc(int ch, FILE *f)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">/* __GNUC__ */</span></span></span><br><span class=\"line\"><span class=\"comment\">/* Private functions -------------------------------------------------</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN 0 */</span> </span><br><span class=\"line\">PUTCHAR_PROTOTYPE</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    HAL_UART_Transmit(&amp;huart1 , (<span class=\"keyword\">uint8_t</span> *)&amp;ch, <span class=\"number\">1</span>, <span class=\"number\">0xFFFF</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END 0 */</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<h2 id=\"1-2-条件编译-格式化代码\"><a href=\"#1-2-条件编译-格式化代码\" class=\"headerlink\" title=\"1.2 条件编译+格式化代码\"></a>1.2 条件编译+格式化代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*********************************代码格式化+实现条件编译效果*********************************/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> USER_MAIN_DEBUG  <span class=\"comment\">//若定义，输出双引号的内容后自动添加\\r\\n</span></span></span><br><span class=\"line\">\t\t\t\t\t\t <span class=\"comment\">//若未定义，不输出内容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> USER_MAIN_DEBUG</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_printf(format, ...) printf( format <span class=\"meta-string\">&quot;\\r\\n&quot;</span>, ##__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_info(format, ...) printf(<span class=\"meta-string\">&quot;[\\tmain]info:&quot;</span> format <span class=\"meta-string\">&quot;\\r\\n&quot;</span>, ##__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_debug(format, ...) printf(<span class=\"meta-string\">&quot;[\\tmain]debug:&quot;</span> format <span class=\"meta-string\">&quot;\\r\\n&quot;</span>, ##__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_error(format, ...) printf(<span class=\"meta-string\">&quot;[\\tmain]error:&quot;</span> format <span class=\"meta-string\">&quot;\\r\\n&quot;</span>,##__VA_ARGS__)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_printf(format, ...)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_info(format, ...)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_debug(format, ...)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> user_main_error(format, ...)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"1-3-逻辑代码\"><a href=\"#1-3-逻辑代码\" class=\"headerlink\" title=\"1.3 逻辑代码\"></a>1.3 逻辑代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//发送数据</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Transmit</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *pData,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"keyword\">uint16_t</span> Size, <span class=\"keyword\">uint32_t</span> Timeout)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//接收数据</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Receive</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *pData,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\"><span class=\"keyword\">uint16_t</span> Size, <span class=\"keyword\">uint32_t</span> Timeout)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//发送中断</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Transmit_IT</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">pData, <span class=\"keyword\">uint16_t</span> Size)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//接收中断</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Receive_IT</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *pData</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">, <span class=\"keyword\">uint16_t</span> Size)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//使用DMA发送</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Transmit_DMA</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">pData, <span class=\"keyword\">uint16_t</span> Size)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//使用DMA接收</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_Receive_DMA</span><span class=\"params\">(UART_HandleTypeDef *huart, <span class=\"keyword\">uint8_t</span> *</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">pData, <span class=\"keyword\">uint16_t</span> Size)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//DMA暂停</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_DMAPause</span><span class=\"params\">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//DMA恢复</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_DMAResume</span><span class=\"params\">(UART_HandleTypeDef *huart)</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//DMA停止</span></span><br><span class=\"line\"><span class=\"function\">HAL_StatusTypeDef <span class=\"title\">HAL_UART_DMAStop</span><span class=\"params\">(UART_HandleTypeDef *huart)</span></span>;</span><br></pre></td></tr></table></figure>\n\n\n<h1 id=\"2-PWM\"><a href=\"#2-PWM\" class=\"headerlink\" title=\"2. PWM\"></a>2. PWM</h1><h2 id=\"2-1-时钟树配置\"><a href=\"#2-1-时钟树配置\" class=\"headerlink\" title=\"2.1 时钟树配置\"></a>2.1 时钟树配置</h2><h3 id=\"2-1-1-使能外部时钟源\"><a href=\"#2-1-1-使能外部时钟源\" class=\"headerlink\" title=\"2.1.1 使能外部时钟源\"></a>2.1.1 使能外部时钟源</h3><p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210219194625012.png\" alt=\"image-20210219194625012\"></p>\n<h3 id=\"2-1-2-将频率调至最大\"><a href=\"#2-1-2-将频率调至最大\" class=\"headerlink\" title=\"2.1.2 将频率调至最大\"></a>2.1.2 将频率调至最大</h3><p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210219194738128.png\" alt=\"image-20210219194738128\"></p>\n<h2 id=\"2-2-PWM配置\"><a href=\"#2-2-PWM配置\" class=\"headerlink\" title=\"2.2 PWM配置\"></a>2.2 PWM配置</h2><h3 id=\"2-2-1-使能PWM通道\"><a href=\"#2-2-1-使能PWM通道\" class=\"headerlink\" title=\"2.2.1 使能PWM通道\"></a>2.2.1 使能PWM通道</h3><p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210219195306956.png\" alt=\"image-20210219195306956\"></p>\n<p>Internal Clock  内部时钟</p>\n<p>PWM Generation CHx         正向PWM<br>PWM Generation CHxN      反向PWM </p>\n<p>Generation CHx CHxN 一对互补 pwm 输出</p>\n<h3 id=\"2-2-2-配置频率以及占空比\"><a href=\"#2-2-2-配置频率以及占空比\" class=\"headerlink\" title=\"2.2.2 配置频率以及占空比\"></a>2.2.2 配置频率以及占空比</h3><p>频率 = 定时器时钟 / 【（Prescaler 预分频 + 1）*（Counter Period 计数值 + 1）】Hz<br>占空比 = Pulse ( 对比值) / （C ounter Period 计数值）%</p>\n<p>比如：设置定时器时钟为72000000，预分频系数为71，计数值为999，则算出的频率为72000000 / (72 * 1000) = 1000Hz</p>\n<p>需要设置三个值：<strong>Prescaler 预分频</strong>          <strong>Counter Period 计数值</strong>        <strong>Pulse (16 bits value) 初始计数值</strong></p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210219201402769.png\" alt=\"image-20210219201402769\"></p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210219201422574.png\" alt=\"image-20210219201422574\"></p>\n<h3 id=\"2-2-3-业务代码\"><a href=\"#2-2-3-业务代码\" class=\"headerlink\" title=\"2.2.3 业务代码\"></a>2.2.3 业务代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使能timx的通道y，写到while(1)上边</span></span><br><span class=\"line\">HAL_TIM_PWM_Start(&amp;htimx,TIM_CHANNEL_y);</span><br><span class=\"line\"><span class=\"comment\">// 修改timx的通道y的pwm比较值为z，即修改占空比</span></span><br><span class=\"line\">__HAL_TIM_SET_COMPARE(&amp;htimx, TIM_CHANNEL_y, z);</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-SPWM\"><a href=\"#4-SPWM\" class=\"headerlink\" title=\"4. SPWM\"></a>4. SPWM</h1><p>##4.1 原理</p>\n<p>定时器1输出pwm，定时器2产生中断，不停地修改占空比</p>\n<h2 id=\"4-2-配置pwm\"><a href=\"#4-2-配置pwm\" class=\"headerlink\" title=\"4.2 配置pwm\"></a>4.2 配置pwm</h2><h2 id=\"4-3-配置中断\"><a href=\"#4-3-配置中断\" class=\"headerlink\" title=\"4.3 配置中断\"></a>4.3 配置中断</h2><p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210220162948136.png\" alt=\"image-20210220162948136\"></p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210220163011674.png\" alt=\"image-20210220163011674\"></p>\n<h2 id=\"4-4-业务代码\"><a href=\"#4-4-业务代码\" class=\"headerlink\" title=\"4.4 业务代码\"></a>4.4 业务代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*************************************正弦表*************************************/</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> size = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">uint16_t</span> sin_value[] =</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t\t<span class=\"number\">500</span>,<span class=\"number\">531</span>,<span class=\"number\">562</span>,<span class=\"number\">593</span>,<span class=\"number\">624</span>,<span class=\"number\">654</span>,<span class=\"number\">684</span>,<span class=\"number\">712</span>,<span class=\"number\">740</span>,<span class=\"number\">767</span>,<span class=\"number\">793</span>,<span class=\"number\">818</span>,<span class=\"number\">842</span>,<span class=\"number\">864</span>,<span class=\"number\">885</span>,<span class=\"number\">904</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">922</span>,<span class=\"number\">938</span>,<span class=\"number\">952</span>,<span class=\"number\">964</span>,<span class=\"number\">975</span>,<span class=\"number\">984</span>,<span class=\"number\">991</span>,<span class=\"number\">996</span>,<span class=\"number\">999</span>,<span class=\"number\">1000</span>,<span class=\"number\">999</span>,<span class=\"number\">996</span>,<span class=\"number\">991</span>,<span class=\"number\">984</span>,<span class=\"number\">975</span>,<span class=\"number\">964</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">952</span>,<span class=\"number\">938</span>,<span class=\"number\">922</span>,<span class=\"number\">904</span>,<span class=\"number\">885</span>,<span class=\"number\">864</span>,<span class=\"number\">842</span>,<span class=\"number\">818</span>,<span class=\"number\">793</span>,<span class=\"number\">767</span>,<span class=\"number\">740</span>,<span class=\"number\">712</span>,<span class=\"number\">684</span>,<span class=\"number\">654</span>,<span class=\"number\">624</span>,<span class=\"number\">593</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">562</span>,<span class=\"number\">531</span>,<span class=\"number\">500</span>,<span class=\"number\">468</span>,<span class=\"number\">437</span>,<span class=\"number\">406</span>,<span class=\"number\">375</span>,<span class=\"number\">345</span>,<span class=\"number\">315</span>,<span class=\"number\">287</span>,<span class=\"number\">259</span>,<span class=\"number\">232</span>,<span class=\"number\">206</span>,<span class=\"number\">181</span>,<span class=\"number\">157</span>,<span class=\"number\">135</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">114</span>,<span class=\"number\">95</span>,<span class=\"number\">77</span>,<span class=\"number\">61</span>,<span class=\"number\">47</span>,<span class=\"number\">35</span>,<span class=\"number\">24</span>,<span class=\"number\">15</span>,<span class=\"number\">8</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">8</span>,<span class=\"number\">15</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">24</span>,<span class=\"number\">35</span>,<span class=\"number\">47</span>,<span class=\"number\">61</span>,<span class=\"number\">77</span>,<span class=\"number\">95</span>,<span class=\"number\">114</span>,<span class=\"number\">135</span>,<span class=\"number\">157</span>,<span class=\"number\">181</span>,<span class=\"number\">206</span>,<span class=\"number\">232</span>,<span class=\"number\">259</span>,<span class=\"number\">287</span>,<span class=\"number\">315</span>,<span class=\"number\">345</span>,</span><br><span class=\"line\">\t\t<span class=\"number\">375</span>,<span class=\"number\">406</span>,<span class=\"number\">437</span>,<span class=\"number\">468</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">使用之前把这段代码剪切到while(1)上边</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">HAL_TIM_PWM_Start(&amp;htimx,TIM_CHANNEL_y); <span class=\"comment\">//开启pwm输出</span></span><br><span class=\"line\">HAL_TIM_Base_Start_IT(&amp;htimz);           <span class=\"comment\">//使能定时器z</span></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">使用之前把这段代码剪切到while(1)上边</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*************************************定时器中断的回调函数*************************************/</span></span><br><span class=\"line\"><span class=\"comment\">//SPWM频率计算：最大频率 / 【（预分频系数 + 1） * （计数值 + 1）* 周内点数】</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">HAL_TIM_PeriodElapsedCallback</span><span class=\"params\">(TIM_HandleTypeDef *htim)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(++i == size)i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (htim-&gt;Instance == htim2.Instance)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t__HAL_TIM_SET_COMPARE(&amp;htim1, TIM_CHANNEL_1, sin_value[i]); <span class=\"comment\">//由向量表修改占空比</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n","tags":[{"name":"HAL","slug":"HAL","permalink":"https://xiangheyuhai.github.io/tags/HAL/"}]},{"title":"学习笔记_Git","date":"2021-02-05T14:55:46.000Z","path":"2021/02/05/学习笔记_Git/","content":"<h1 id=\"Git基本理论\"><a href=\"#Git基本理论\" class=\"headerlink\" title=\"Git基本理论\"></a>Git基本理论</h1><p>==四个工作区域==</p>\n<p>Git有四个工作区域：（本地的三个）工作目录、暂存区、资源库、（远程）远程git仓库</p>\n<p>四个区域的转换关系如图：</p>\n<a id=\"more\"></a>\n\n<p>==git的工作流程==</p>\n<p>１、在工作目录中添加、修改文件；</p>\n<p>２、将需要进行版本管理的文件放入暂存区域；<code>git add .</code></p>\n<p>３、将暂存区域的文件提交到git仓库。                <code>git conmmit</code></p>\n<p>4、 推到远程                                                               <code>git push</code></p>\n<h1 id=\"Git项目搭建\"><a href=\"#Git项目搭建\" class=\"headerlink\" title=\"Git项目搭建\"></a>Git项目搭建</h1><p> ==建立仓库==</p>\n<ul>\n<li><p>本地仓库搭建搭建</p>\n<p>右键新建的文件夹–Git Bush Here</p>\n<p>在当前目录建立一个Git代码库   <code>git init</code></p>\n</li>\n<li><p>克隆远程仓库 </p>\n<p><code>git clone 地址</code></p>\n</li>\n</ul>\n<h1 id=\"Git文件操作\"><a href=\"#Git文件操作\" class=\"headerlink\" title=\"Git文件操作\"></a>Git文件操作</h1><p>==Git文件的四种状态==</p>\n<ul>\n<li><p>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过<code>git add .</code>状态变为<strong>Staged</strong></p>\n</li>\n<li><p>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用<code>git rm</code>移出版本库, 则成为<strong>Untracked</strong>文件</p>\n</li>\n<li><p>Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过<code>git add .</code>可进入暂存<strong>staged</strong>状态, 使用<code>git checkout</code>则丢弃修改过, 返回到<strong>unmodify</strong>状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</p>\n</li>\n<li><p>Staged: 暂存状态. 执行<code>git commit</code>则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为<strong>Unmodify</strong>状态. 执行<code>git reset HEAD filename</code>取消暂存, 文件状态为<strong>Modified</strong></p>\n</li>\n</ul>\n<p>==操作命令==</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status   查看文件状态</span><br><span class=\"line\"><span class=\"number\">1.</span> git add .    添加所有文件到暂存区</span><br><span class=\"line\"><span class=\"number\">2.</span> git commit -m <span class=\"string\">&quot;消息内容&quot;</span>  提交暂存区中的内容到本地仓库</span><br><span class=\"line\">           -m  \t\t信息（message） </span><br><span class=\"line\"><span class=\"number\">3.</span> git push</span><br></pre></td></tr></table></figure>\n<p>==忽略文件==</p>\n<p>​        有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p>\n<p>​        在主目录下建立”.gitignore”文件，此文件有如下规则：</p>\n<ol>\n<li><p>忽略文件中的空行或以井号（#）开始的行将会被忽略。</p>\n</li>\n<li><p>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</p>\n</li>\n<li><p>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</p>\n</li>\n<li><p>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</p>\n</li>\n<li><p>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</p>\n<h1 id=\"Git实际操作\"><a href=\"#Git实际操作\" class=\"headerlink\" title=\"Git实际操作\"></a>Git实际操作</h1></li>\n</ol>\n<p>==提交文件==</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status   查看文件状态</span><br><span class=\"line\"><span class=\"number\">1.</span> git add .    添加所有文件到暂存区</span><br><span class=\"line\"><span class=\"number\">2.</span> git commit -m <span class=\"string\">&quot;消息内容&quot;</span>  提交暂存区中的内容到本地仓库</span><br><span class=\"line\">           -m  \t\t信息（message） </span><br><span class=\"line\">    或者git commit之后会出现一个界面，输入i，输入提交的备注；按下ESC，退出插入备注界面；输入ZZ恢复正常</span><br><span class=\"line\"><span class=\"number\">3.</span> git push</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add --all  添加所有文件</span><br><span class=\"line\">git commit -m &#x27;all&#x27;  提交所有文件</span><br><span class=\"line\"><span class=\"function\">git push origion <span class=\"title\">dev</span><span class=\"params\">(你要push的分支)</span></span></span><br></pre></td></tr></table></figure>\n<p>==遇到问题==</p>\n<p><img src=\"https://gitee.com/xiangheyuhai/fan-drawing-bed/raw/master/image-20210203200118601.png\"></p>\n<p>用户名：gitee的账号</p>\n<p>密码：gitee的密码</p>\n","tags":[{"name":"Git","slug":"Git","permalink":"https://xiangheyuhai.github.io/tags/Git/"}]},{"title":"学习笔记_Typora","date":"2021-02-03T14:55:46.000Z","path":"2021/02/03/学习笔记_Typora/","content":"<p>==标题==</p>\n<h1 id=\"一级标题用一个“-”\"><a href=\"#一级标题用一个“-”\" class=\"headerlink\" title=\"一级标题用一个“#”\"></a>一级标题用一个“#”</h1><h1 id=\"内部跳转测试\"><a href=\"#内部跳转测试\" class=\"headerlink\" title=\"内部跳转测试\"></a>内部跳转测试</h1><h2 id=\"二级用2个“-”\"><a href=\"#二级用2个“-”\" class=\"headerlink\" title=\"二级用2个“#”\"></a>二级用2个“#”</h2><a id=\"more\"></a>\n\n<h3 id=\"三级用3个“-”\"><a href=\"#三级用3个“-”\" class=\"headerlink\" title=\"三级用3个“#”\"></a>三级用3个“#”</h3><h4 id=\"四级用4个“-”\"><a href=\"#四级用4个“-”\" class=\"headerlink\" title=\"四级用4个“#”\"></a>四级用4个“#”</h4><h5 id=\"五级用5个“-”\"><a href=\"#五级用5个“-”\" class=\"headerlink\" title=\"五级用5个“#”\"></a>五级用5个“#”</h5><h6 id=\"六级用6个“-”\"><a href=\"#六级用6个“-”\" class=\"headerlink\" title=\"六级用6个“#”\"></a>六级用6个“#”</h6><p>==删除线==</p>\n<p><del>删除线用英文状态下的前后2个波浪号</del></p>\n<p>==斜体==</p>\n<p><em>斜体是前后各加一个星号</em></p>\n<p>==加粗==</p>\n<p><strong>加粗是前后各加2个星号</strong></p>\n<p>==斜体+加粗==</p>\n<p><strong><em>斜体跟加粗是前后各加3个星号</em></strong></p>\n<p>==下划线==</p>\n<p><u>下划线是输入完之后（ctrl + u）</u></p>\n<p>==高亮==</p>\n<p><code>高亮是前后两个等号</code></p>\n<p>==下标==</p>\n<p>下标是前后各加一个波浪号，比如H<del>2</del>O</p>\n<p>==上标==</p>\n<p>上标是前后各加一个小尖尖，比如m^3^</p>\n<p>==表情==</p>\n<p>先写一个英文状态的冒号，再输入英文，比如输入：smile</p>\n<p>:smile:</p>\n<p>:cow: :beer:</p>\n<p>==表格==</p>\n<p>ctrl  + t，选择插入表格</p>\n<table>\n<thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>5</td>\n<td>6</td>\n<td>7</td>\n<td>8</td>\n</tr>\n<tr>\n<td>9</td>\n<td>10</td>\n<td>11</td>\n<td>12</td>\n</tr>\n</tbody></table>\n<p>==引用==</p>\n<p>前面加一个右书名号（&gt;）</p>\n<blockquote>\n<p>不知妻美刘强东</p>\n<blockquote>\n<p>确实</p>\n</blockquote>\n</blockquote>\n<p>==列表==</p>\n<p><code>无序列表：星号+空格</code></p>\n<ul>\n<li>第一点</li>\n<li>第二点</li>\n<li>第三点</li>\n</ul>\n<p><code>有序列表：数字，点，空格</code></p>\n<ol>\n<li>第一点</li>\n<li>第二点</li>\n<li>第三点</li>\n</ol>\n<p>==代码块==</p>\n<p>英文状态下输入三个点（~那个键），语言类型，输入代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>==行内代码==</p>\n<p>内容前后各加一个点</p>\n<p><code>java</code></p>\n<p>==分割线==</p>\n<p>三个*或三个-或三个_</p>\n<hr>\n<hr>\n<hr>\n<p>==跳转==</p>\n<p><code>外部跳转</code>：格式为<code>[link text](link)</code></p>\n<p>比如：<a href=\"http://www.taobao.com/\">按住ctrl跳转到淘宝</a></p>\n<p><code>内部跳转</code>：格式为<code>[link text](#要去的目的地)</code></p>\n<p>比如：<a href=\"#%E5%86%85%E9%83%A8%E8%B7%B3%E8%BD%AC%E6%B5%8B%E8%AF%95\">按住ctrl跳转到内部跳转测试</a></p>\n<p>==插入图片==</p>\n<p><code>网络图片: ！[自己给图片起的名字](图片地址)</code></p>\n<p>比如：</p>\n<p><img src=\"https://ss3.bdstatic.com/70cFv8Sh_Q1YnxGkpoWK1HF6hhy/it/u=2782264667,4105445696&fm=26&gp=0.jpg\" alt=\"钢铁侠\"></p>\n<p><code>本地图片：！[自己给图片起的名字](如果跟此文档在同一目录下直接用文件名)  或者直接复制进来</code></p>\n","tags":[{"name":"Typora","slug":"Typora","permalink":"https://xiangheyuhai.github.io/tags/Typora/"}]}]